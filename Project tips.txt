For an airline to be able to vote for registration it is required that it has ?? payed 10 ether
For a consumer to be able to buy insurance for a flight it is required that the airline has ?? payed 10 ether

the flight struct and its mapping should be in the Data contract
You may find useful to have the struct, not the mapping of flights, in the App contract to organize the data of the function during its execution or if you fetch a Flight from the Data contract to get it when you call a function from the Data contract that returns a flight


using SafeMath for uint256;
mapping(address => uint256) private sales;
function safeWithdraw(uint256 amount) external {
//Checks
require(msg.sender == tx.origin, "Contracts not allowed"); //Ensure that this is callable only by an EOA Externally Owned Account.
require(sales[msg.sender] >= amount, Iinsufficient funds");

//Effects
uint256 amount = sales[msg.sender];
sales[msg.sender] = sales[msg.sender].sub(amount);

//Interaction
msg.sender.transfer(amount);
}



//Rate Limiting
using SafeMath for uint256;
uint256 private enabled = block.timestamp;

modifier rateLimit(uint time) {
require(block.timestamp >= enabled, "Rate limiting in effect");
enabled=enabled.add(time);
_;
}

function safeWithdraw(uint256 amount) external rateLimit(30 minutes) {
//TODO Code for withdraw
}

